<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gaga.bo.service.club.ClubDao">

    <resultMap id="ClubResultMap" type="club">
	  <id property="clubNo" column="club_no" jdbcType="INTEGER"/>
	  <result property="clubName" column="club_name" jdbcType="VARCHAR"/>
	  <result property="clubIntro" column="club_intro" jdbcType="VARCHAR"/>
	  <result property="clubLeaderNo" column="club_leader_no" jdbcType="INTEGER"/>
	  <result property="clubMaxMemberNo" column="club_max_member_no" jdbcType="INTEGER"/>
	  <result property="clubRegDate" column="club_reg_date" jdbcType="TIMESTAMP"/>
	  <result property="clubState" column="club_state" jdbcType="INTEGER"/>
	  <result property="clubImg" column="club_img" jdbcType="VARCHAR"/>
	  <result property="clubRegion" column="club_region" jdbcType="VARCHAR"/>
	  <result property="filterGender" column="filter_gender" jdbcType="INTEGER"/>
	  <result property="filterMinAge" column="filter_min_age" jdbcType="INTEGER"/>
	  <result property="filterMaxAge" column="filter_max_age" jdbcType="INTEGER"/>
	  <result property="filterTag" column="filter_tag" jdbcType="VARCHAR"/>
	  <result property="mainCategoryNo" column="main_category_no" jdbcType="INTEGER"/>
	  <result property="memberCount" column="member_count" jdbcType="INTEGER" />
	</resultMap>
	
	<resultMap id="mainCategoryResultMap" type="java.util.HashMap">
      <id property="mainCategoryNo" 		column="main_category_no" 	jdbcType="INTEGER" />
      <result property="mainCategoryName" column="main_category_name" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="subCategoryResultMap" type="java.util.HashMap">
      <id property="tag" 					column="tag" 				jdbcType="VARCHAR" />
      <result property="mainCategoryNo" 	column="main_category_no" 	jdbcType="INTEGER" />
	</resultMap>

	<!-- 클럽관리 -->
	<!-- SQL : INSERT -->
	<insert id="addClub" parameterType="club">
	  INSERT 
	  INTO clubs (club_name, club_intro, club_leader_no, club_max_member_no,
	    club_reg_date, club_state, club_img, club_region, filter_gender, filter_min_age, 
	    filter_max_age, filter_tag, main_category_no)
	  VALUES 
	   (#{clubName:VARCHAR}, #{clubIntro:VARCHAR}, #{clubLeaderNo:INTEGER}, #{clubMaxMemberNo:INTEGER},
	    #{clubRegDate:TIMESTAMP}, #{clubState:INTEGER}, #{clubImg:VARCHAR}, #{clubRegion:VARCHAR},
	    #{filterGender:INTEGER}, #{filterMinAge:INTEGER}, #{filterMaxAge:INTEGER}, #{filterTag:VARCHAR},
	    #{mainCategoryNo:INTEGER})
	</insert>
	
	<!-- SELECT ONE -->
	<select id="getClub" resultMap="ClubResultMap" parameterType="int">
	  SELECT club_no, club_name, club_intro, club_leader_no, club_max_member_no,
	         club_reg_date, club_state, club_img, club_region, filter_gender,
	         filter_min_age, filter_max_age, filter_tag, main_category_no
	  FROM clubs
	  WHERE club_no = #{clubNo:INTEGER}
	</select>
	
	<!-- SELECT LIST 회원이 생성한 클럽 목록 조회 -->
	<select id="getCreateClubList" resultMap="ClubResultMap" parameterType="int">
	  SELECT club_no, club_name, club_intro, club_leader_no, club_max_member_no,
	         club_reg_date, club_state, club_img, club_region, filter_gender,
	         filter_min_age, filter_max_age, filter_tag, main_category_no
	  FROM clubs
	  WHERE club_leader_no = #{clubLeaderNo:INTEGER}
	</select>
	
	<!-- SELECT LIST 클럽 목록 검색 -->
	<select id="getSearchClubList" parameterType="filter" resultMap="ClubResultMap">
	  SELECT club_no, club_name, club_intro, club_leader_no, club_max_member_no,
	         club_reg_date, club_state, club_img, club_region, filter_gender,
	         filter_min_age, filter_max_age, filter_tag, main_category_no
	  FROM clubs
      WHERE club_state = 0
      		AND filter_gender = #{gender:INTEGER}
  			AND filter_min_age &lt;= #{maxAge:INTEGER}
            AND filter_max_age &gt;= #{minAge:INTEGER}
  			AND #{age:INTEGER} BETWEEN filter_min_age AND filter_max_age
  	  <if test="mainCategoryNo != null">
  			AND main_category_no =  #{mainCategoryNo:INTEGER}
  	</if>
  	<if test="tag != null">
  			AND filter_tag IN (#{tag : LONGVARCHAR}, #{tag2 : LONGVARCHAR}, #{tag3 : LONGVARCHAR})
  	</if>
	</select>
	
	<!-- SELECT LIST 클럽 목록 출력(비회원 메인화면) -->
	<select id="getMainClubList" parameterType="int" resultMap="ClubResultMap">
	 SELECT c.club_no, c.club_name, c.club_intro, c.club_leader_no, c.club_max_member_no,
   		    c.club_reg_date, c.club_state, c.club_img, c.club_region, c.filter_gender,
    		c.filter_min_age, c.filter_max_age, c.filter_tag, c.main_category_no,
   		    COUNT(members.member_no) AS member_count
	 FROM clubs c
	 JOIN meetings m ON c.club_no = m.parent_club_no
	 LEFT JOIN members ON c.club_no = members.club_no
	 WHERE c.main_category_no = #{mainCategoryNo}
	 GROUP BY c.club_no, m.meeting_no
	 ORDER BY member_count DESC, m.meeting_reg_date DESC
 
	</select>
	
	
	<!-- SELECT LIST 회원이 참여한 클럽 목록 조회 -->
	<select id="getMyClubList" parameterType="int" resultMap="ClubResultMap">
	  SELECT
	    c.club_no, c.club_name, c.club_intro, c.club_leader_no, c.club_max_member_no,
	    c.club_reg_date, c.club_state, c.club_img, c.club_region, c.filter_gender,
	    c.filter_min_age, c.filter_max_age, c.filter_tag, c.main_category_no, cm.state
	  FROM clubs c
	  LEFT JOIN members cm ON c.club_no = cm.club_no
	  WHERE cm.user_no = #{userNo:INTEGER} OR c.club_leader_no = #{userNo:INTEGER}
	</select>
	
	<!-- UPDATE -->
	<update id="updateClub" parameterType="club">
		UPDATE clubs
		<set>
			club_name = #{clubName:VARCHAR},
		    club_intro = #{clubIntro:VARCHAR},
		    club_max_member_no = #{clubMaxMemberNo:INTEGER},
		    club_state = #{clubState:INTEGER},
		    club_img = #{clubImg:VARCHAR},
		    club_region = #{clubRegion:VARCHAR},
		    filter_gender = #{filterGender:INTEGER},
		    filter_min_age = #{filterMinAge:INTEGER},
		    filter_max_age = #{filterMaxAge:INTEGER},
		    filter_tag = #{filterTag:VARCHAR}
		</set>
		WHERE club_no = #{clubNo:INTEGER}
	</update>
	
	<!-- DELETE -->
	<delete id="deleteClub" parameterType="int">
		DELETE FROM clubs
		WHERE club_no = #{clubNo:INTEGER}
	</delete>
	
	<!-- 멤버관리 -->
	<!-- INSERT -->
	<insert id="addClubMember" parameterType="Map">
	  INSERT INTO members (user_no, club_no, state)
	  VALUES (#{userNo:INTEGER}, #{clubNo:INTEGER}, 1)
	</insert>
	
	<!-- UPDATE -->
	<update id="updateClubMember" parameterType="Map">
	  UPDATE members
	  	<set>
	  	    state = 2, 
	  	    confirmed_date = NOW()
	  	</set>

      WHERE club_no = #{clubNo:INTEGER} AND user_no = #{userNo:INTEGER}
	</update>
	
	<!-- DELETE -->
	<delete id="deleteClubMember" parameterType="int">
	  DELETE 
	  FROM members
      WHERE member_no = #{memberNo:INTEGER}
	</delete>
	
</mapper>